<?xml version="1.0"?>

<launch>

  <!-- Start Gazebo with wg world running in (max) realtime -->
  <!-- <include file="$(find hector_gazebo_worlds)/launch/sick_robot_day_2012_20m.launch"/> -->
  <include file="$(find hector_gazebo_worlds)/launch/empty.launch"/>

  <!-- Spawn simulated quadrotor uav -->
  <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
    <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_hokuyo_utm30lx.gazebo.xacro"/>
  </include>

  <!-- Start rviz visualization with preset config -->
<!--  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hector_quadrotor_demo)/rviz_cfg/outdoor_flight.rviz"/> -->

  <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>
  <arg name="model_box" default="$(find hector_quadrotor_description)/urdf/box.urdf.xacro"/>
  <arg name="world_frame" default="world"/>
  <arg name="base_link_frame" default="$(arg tf_prefix)/footprint"/>

  <!-- send the robot XML to param server -->
  <param name="box_description" command="$(find xacro)/xacro '$(arg model_box)' base_link_frame:=$(arg base_link_frame) world_frame:=$(arg world_frame)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_box" pkg="gazebo_ros" type="spawn_model"
        args="-param box_description
             -urdf
             -x -10.0
             -y 12.0
             -z 0.03
             -model box"
       respawn="false" output="screen"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find hector_quadrotor_controller)/params/mybot_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="robot_controller_spawner"
        pkg="controller_manager"
        type="spawner" respawn="false"
        output="screen" ns="/box/box"
        args="joint_state_controller rightWheel_effort_controller leftWheel_effort_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="box_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="robot_description" to="box_description" />
    <param name="box_description" command="$(find xacro)/xacro.py '$(find hector_quadrotor_description)/urdf/box.urdf.xacro'" />
    <remap from="/joint_states" to="/mybot/joint_states" />
  </node>

  <!-- <node pkg="diff_wheeled_robot_control" type="diff_wheeled_robot_key" name="diff_wheeled_robot_key"  output="screen">

    <param name="scale_linear" value="0.5" type="double"/>
    <param name="scale_angular" value="1.5" type="double"/>
    <remap from="turtlebot_teleop_keyboard/cmd_vel" to="mybot/cmd_vel"/>

  </node> -->

  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hector_quadrotor_demo)/rviz_cfg/outdoor_flight.rviz"/>

</launch>
