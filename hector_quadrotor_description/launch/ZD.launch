<?xml version="1.0"?>

<launch>

  <!-- Start Gazebo with wg world running in (max) realtime -->
  <!-- <include file="$(find hector_gazebo_worlds)/launch/sick_robot_day_2012_20m.launch"/> -->
  <include file="$(find hector_gazebo_worlds)/launch/empty.launch"/>

  <arg name="name" default="box"/>
  <arg name="model" default="$(find hector_quadrotor_description)/urdf/box.urdf.xacro"/>
  <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>

  <!-- 机器人初始坐标 -->
  <arg name="x" default="-5.0"/>
  <arg name="y" default="-5.0"/>
  <arg name="z" default="0.3"/>

  <arg name="world_frame" default="/world"/> <!-- This should actually be "/world". See https://github.com/ros-simulation/gazebo_ros_pkgs/pull/324 -->
  <arg name="base_link_frame" default="$(arg tf_prefix)/base_link"/>

  <!-- send the robot XML to param server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(arg model)' base_link_frame:=$(arg base_link_frame) world_frame:=$(arg world_frame)" />
  <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />
  <param name="base_link_frame" type="string" value="$(arg base_link_frame)"/>
  <param name="world_frame" type="string" value="$(arg world_frame)"/>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model"
        args="-param robot_description
           -urdf
           -x $(arg x)
           -y $(arg y)
           -z $(arg z)
           -model $(arg name)"
        respawn="false" output="screen"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find hector_quadrotor_controller)/params/mybot_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner"
        pkg="controller_manager"
        type="spawner" respawn="false"
        output="screen" ns="/mybot"
        args="joint_state_controller rightWheel_effort_controller leftWheel_effort_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
      <remap from="robot_description" to="box_description"/>
    <param name="box_description" command="$(find xacro)/xacro.py '$(find hector_quadrotor_description)/urdf/box.urdf.xacro'" />
    <remap from="/joint_states" to="/mybot/joint_states" />
  </node>

</launch>
